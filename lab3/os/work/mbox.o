; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.data
	.align 2
LC0:
	.ascii "Bad lock_create in MboxModInit\000"
.text
	.align 2
.proc _MboxModuleInit
.global _MboxModuleInit
_MboxModuleInit:
;  Function 'MboxModuleInit'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L13:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L16
	nop	; delay slot nop
	j	L14
	nop	; delay slot nop
L16:
	addi	r1,r0,#0
	sw	-16(r30),r1
L17:
	lw	r1,-16(r30)
	slei	r2,r1,#31
	bnez	r2,L20
	nop	; delay slot nop
	j	L18
	nop	; delay slot nop
L20:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r1,r5
	lw	r3,-16(r30)
	add	r1,r2,r3
	addi	r2,r0,(#0x0)&0xff
	sb	(r1),r2
L19:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L17
	nop	; delay slot nop
L18:
	nop
	addi	r1,r0,#0
	sw	-16(r30),r1
L21:
	lw	r1,-16(r30)
	slei	r2,r1,#9
	bnez	r2,L24
	nop	; delay slot nop
	j	L22
	nop	; delay slot nop
L24:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r2,r3,#0x3
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r1,r2,r5
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#36
	addi	r1,r0,#-1
	sw	(r2),r1
L23:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L21
	nop	; delay slot nop
L22:
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	32(r1),r2
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	76(r1),r2
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	80(r1),r2
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	add	r1,r1,r2
	addi	r2,r0,(#0x0)&0xff
	sb	84(r1),r2
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	add	r1,r1,r2
	lw	r2,-12(r30)
	sw	100(r1),r2
L15:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L13
	nop	; delay slot nop
L14:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L25:
	lw	r1,-12(r30)
	slei	r2,r1,#49
	bnez	r2,L28
	nop	; delay slot nop
	j	L26
	nop	; delay slot nop
L28:
	lhi	r1,((_mbox_buffers)>>16)&0xffff
	addui	r1,r1,(_mbox_buffers)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,(#0x0)&0xff
	sb	104(r1),r2
L27:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L25
	nop	; delay slot nop
L26:
	add	r2,r0,r29
	jal	_LockCreate
	nop	; delay slot nop
	lhi	r2,((_l_buff)>>16)&0xffff
	addui	r2,r2,(_l_buff)&0xffff
	sw	(r2),r1
	lw	r1,(r2)
	seqi	r2,r1,#-1
	beqz	r2,L29
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L29:
L12:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxModuleInit
.data
	.align 2
LC1:
	.ascii "Bad sem_create in MboxOpen\000"
.text
	.align 2
.proc _MboxCreate
.global _MboxCreate
_MboxCreate:
;  Function 'MboxCreate'; 8 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-12(r30),r1
L31:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L34
	nop	; delay slot nop
	j	L32
	nop	; delay slot nop
L34:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r6,((_mboxes)>>16)&0xffff
	addui	r6,r6,(_mboxes)&0xffff
	add	r2,r1,r6
	lbu	r1,84(r2)
	snei	r2,r1,#0
	bnez	r2,L33
	nop	; delay slot nop
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	add	r1,r1,r2
	addi	r2,r0,(#0x1)&0xff
	sb	84(r1),r2
	j	L32
	nop	; delay slot nop
L35:
L33:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L31
	nop	; delay slot nop
L32:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	seqi	r2,r1,#32
	beqz	r2,L36
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L30
	nop	; delay slot nop
L36:
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#9
	sw	(r1),r2
	jal	_SemCreate
	nop	; delay slot nop
	addi	r29,r29,#8
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	lw	r3,-12(r30)
	add	r5,r0,r3
	slli	r4,r5,#0x1
	add	r4,r4,r3
	slli	r5,r4,#0x2
	add	r5,r5,r3
	slli	r3,r5,#0x3
	add	r2,r2,r3
	sw	88(r2),r1
	seqi	r1,r1,#-1
	beqz	r1,L37
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L37:
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SemCreate
	nop	; delay slot nop
	addi	r29,r29,#8
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	lw	r3,-12(r30)
	add	r5,r0,r3
	slli	r4,r5,#0x1
	add	r4,r4,r3
	slli	r5,r4,#0x2
	add	r5,r5,r3
	slli	r3,r5,#0x3
	add	r2,r2,r3
	sw	92(r2),r1
	seqi	r1,r1,#-1
	beqz	r1,L38
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L38:
	add	r2,r0,r29
	jal	_LockCreate
	nop	; delay slot nop
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	lw	r3,-12(r30)
	add	r5,r0,r3
	slli	r4,r5,#0x1
	add	r4,r4,r3
	slli	r5,r4,#0x2
	add	r5,r5,r3
	slli	r3,r5,#0x3
	add	r2,r2,r3
	sw	96(r2),r1
	seqi	r1,r1,#-1
	beqz	r1,L39
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L39:
	lw	r1,-12(r30)
	j	L30
	nop	; delay slot nop
L30:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxCreate
	.align 2
.proc _MboxOpen
.global _MboxOpen
_MboxOpen:
;  Function 'MboxOpen'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-12(r30),r1
	lw	r1,(r30)
	sgti	r2,r1,#16
	bnez	r2,L42
	nop	; delay slot nop
	lw	r1,(r30)
	slti	r2,r1,#0
	bnez	r2,L42
	nop	; delay slot nop
	j	L41
	nop	; delay slot nop
L42:
	addi	r1,r0,#-1
	j	L40
	nop	; delay slot nop
L41:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r1,r5
	lbu	r1,84(r2)
	snei	r2,r1,#0
	bnez	r2,L43
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L40
	nop	; delay slot nop
L43:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r1,r5
	lw	r3,-12(r30)
	add	r1,r2,r3
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L44
	nop	; delay slot nop
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r2,r1,r5
	lw	r3,-12(r30)
	add	r1,r2,r3
	addi	r2,r0,(#0x1)&0xff
	sb	(r1),r2
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	add	r1,r1,r2
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x1
	add	r3,r3,r2
	slli	r4,r3,#0x2
	add	r4,r4,r2
	slli	r2,r4,#0x3
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,32(r3)
	addi	r3,r2,#1
	sw	32(r1),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
L44:
	addi	r1,r0,#1
	j	L40
	nop	; delay slot nop
L40:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxOpen
	.align 2
.proc _MboxClose
.global _MboxClose
_MboxClose:
;  Function 'MboxClose'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-12(r30),r1
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	add	r1,r2,r1
	sw	-24(r30),r1
	lw	r1,-24(r30)
	lw	r2,-12(r30)
	add	r1,r1,r2
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L46
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L45
	nop	; delay slot nop
L46:
	lw	r1,-24(r30)
	lw	r2,-12(r30)
	add	r1,r1,r2
	addi	r2,r0,(#0x0)&0xff
	sb	(r1),r2
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-16(r30),r1
	lw	r1,-24(r30)
	lw	r2,-24(r30)
	lw	r3,32(r2)
	addi	r2,r3,#-1
	sw	32(r1),r2
	lw	r1,-24(r30)
	lw	r2,32(r1)
	snei	r1,r2,#0
	bnez	r1,L47
	nop	; delay slot nop
	lw	r1,-24(r30)
	lw	r2,76(r1)
	sw	-20(r30),r2
L48:
	lw	r1,-24(r30)
	lw	r2,-20(r30)
	lw	r1,80(r1)
	sle	r2,r2,r1
	bnez	r2,L51
	nop	; delay slot nop
	j	L49
	nop	; delay slot nop
L51:
	lhi	r1,((_mbox_buffers)>>16)&0xffff
	addui	r1,r1,(_mbox_buffers)&0xffff
	lw	r2,-24(r30)
	lw	r3,-20(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#36
	lw	r2,(r3)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,(#0x0)&0xff
	sb	104(r1),r2
	lw	r1,-24(r30)
	lw	r2,-20(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#36
	addi	r1,r0,#-1
	sw	(r2),r1
L50:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	addi	r3,r0,#10
	movi2fp	f0,r1
	movi2fp	f1,r3
	div	f0,f0,f1
	movfp2i	r2,f0
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x1
	sub	r1,r1,r2
	sw	-20(r30),r1
	j	L48
	nop	; delay slot nop
L49:
	lw	r1,-24(r30)
	addi	r2,r0,#0
	sw	76(r1),r2
	lw	r1,-24(r30)
	addi	r2,r0,#0
	sw	80(r1),r2
	lw	r1,-24(r30)
	addi	r2,r0,(#0x0)&0xff
	sb	84(r1),r2
L47:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L45
	nop	; delay slot nop
L45:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxClose
	.align 2
.proc _MboxSend
.global _MboxSend
_MboxSend:
;  Function 'MboxSend'; 24 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#56	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-20(r30),r1
	lw	r1,8(r30)
	sw	-24(r30),r1
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	add	r1,r2,r1
	sw	-28(r30),r1
	lw	r1,-28(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L53
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L52
	nop	; delay slot nop
L53:
	lw	r1,4(r30)
	sgti	r2,r1,#100
	beqz	r2,L54
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L52
	nop	; delay slot nop
L54:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-28(r30)
	lw	r3,88(r2)
	sw	(r1),r3
	jal	_SemHandleWait
	nop	; delay slot nop
	addi	r29,r29,#8
L55:
	j	L57
	nop	; delay slot nop
	j	L56
	nop	; delay slot nop
L57:
L58:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_l_buff)>>16)&0xffff
	addui	r2,r2,(_l_buff)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	bnez	r2,L60
	nop	; delay slot nop
	j	L59
	nop	; delay slot nop
L60:
	j	L58
	nop	; delay slot nop
L59:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L61:
	lw	r1,-12(r30)
	slei	r2,r1,#49
	bnez	r2,L64
	nop	; delay slot nop
	j	L62
	nop	; delay slot nop
L64:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x3
	sub	r2,r2,r1
	slli	r3,r2,#0x2
	sub	r3,r3,r1
	slli	r1,r3,#0x2
	lhi	r6,((_mbox_buffers)>>16)&0xffff
	addui	r6,r6,(_mbox_buffers)&0xffff
	add	r2,r1,r6
	lbu	r1,104(r2)
	snei	r2,r1,#0
	bnez	r2,L63
	nop	; delay slot nop
	j	L62
	nop	; delay slot nop
L65:
L63:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L61
	nop	; delay slot nop
L62:
	lw	r1,-12(r30)
	snei	r2,r1,#50
	beqz	r2,L66
	nop	; delay slot nop
	lhi	r1,((_mbox_buffers)>>16)&0xffff
	addui	r1,r1,(_mbox_buffers)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,(#0x1)&0xff
	sb	104(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_l_buff)>>16)&0xffff
	addui	r2,r2,(_l_buff)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	j	L56
	nop	; delay slot nop
L66:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_l_buff)>>16)&0xffff
	addui	r2,r2,(_l_buff)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	j	L55
	nop	; delay slot nop
L56:
	nop
L67:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-28(r30)
	lw	r3,96(r2)
	sw	(r1),r3
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	bnez	r2,L69
	nop	; delay slot nop
	j	L68
	nop	; delay slot nop
L69:
	j	L67
	nop	; delay slot nop
L68:
	lw	r1,-28(r30)
	lw	r2,-28(r30)
	lw	r3,80(r2)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#36
	lw	r1,-12(r30)
	sw	(r2),r1
	lw	r1,-28(r30)
	lw	r2,-28(r30)
	lw	r3,80(r2)
	addi	r2,r3,#1
	addi	r4,r0,#10
	movi2fp	f0,r2
	movi2fp	f1,r4
	div	f0,f0,f1
	movfp2i	r3,f0
	add	r5,r0,r3
	slli	r4,r5,#0x2
	add	r4,r4,r3
	slli	r3,r4,#0x1
	sub	r2,r2,r3
	sw	80(r1),r2
	addi	r1,r0,#0
	sw	-16(r30),r1
L70:
	lw	r1,-16(r30)
	lw	r2,4(r30)
	slt	r1,r1,r2
	bnez	r1,L73
	nop	; delay slot nop
	j	L71
	nop	; delay slot nop
L73:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x3
	sub	r2,r2,r1
	slli	r3,r2,#0x2
	sub	r3,r3,r1
	slli	r1,r3,#0x2
	lhi	r6,((_mbox_buffers)>>16)&0xffff
	addui	r6,r6,(_mbox_buffers)&0xffff
	add	r2,r1,r6
	lw	r3,-16(r30)
	add	r1,r2,r3
	lw	r2,-24(r30)
	lw	r3,-16(r30)
	add	r2,r2,r3
	lb	r3,(r2)
	sb	(r1),r3
L72:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L70
	nop	; delay slot nop
L71:
	lhi	r1,((_mbox_buffers)>>16)&0xffff
	addui	r1,r1,(_mbox_buffers)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	lw	r2,4(r30)
	sw	100(r1),r2
	lhi	r1,((_mbox_buffers)>>16)&0xffff
	addui	r1,r1,(_mbox_buffers)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,(#0x1)&0xff
	sb	104(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-28(r30)
	lw	r3,92(r2)
	sw	(r1),r3
	jal	_SemHandleSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-28(r30)
	lw	r3,96(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L52
	nop	; delay slot nop
L52:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxSend
.data
	.align 2
LC2:
	.ascii "Invalid message buffer index from cbobi.head: %d\n\000"
.text
	.align 2
.proc _MboxRecv
.global _MboxRecv
_MboxRecv:
;  Function 'MboxRecv'; 24 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#56	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-16(r30),r1
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	add	r1,r2,r1
	sw	-24(r30),r1
	lw	r1,8(r30)
	sw	-28(r30),r1
	lw	r1,-24(r30)
	lw	r2,-16(r30)
	add	r1,r1,r2
	lbu	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L75
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L74
	nop	; delay slot nop
L75:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	lw	r3,92(r2)
	sw	(r1),r3
	jal	_SemHandleWait
	nop	; delay slot nop
	addi	r29,r29,#8
L76:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	lw	r3,96(r2)
	sw	(r1),r3
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#1
	bnez	r2,L78
	nop	; delay slot nop
	j	L77
	nop	; delay slot nop
L78:
	j	L76
	nop	; delay slot nop
L77:
	lw	r1,-24(r30)
	lw	r2,-24(r30)
	lw	r3,76(r2)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#36
	lw	r1,(r2)
	sw	-12(r30),r1
	lw	r1,-12(r30)
	slti	r2,r1,#0
	beqz	r2,L79
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	lw	r2,-24(r30)
	lw	r3,76(r2)
	sw	4(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L79:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x3
	sub	r2,r2,r1
	slli	r3,r2,#0x2
	sub	r3,r3,r1
	slli	r1,r3,#0x2
	lhi	r6,((_mbox_buffers)>>16)&0xffff
	addui	r6,r6,(_mbox_buffers)&0xffff
	add	r2,r1,r6
	lbu	r1,104(r2)
	snei	r2,r1,#0
	bnez	r2,L80
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	lw	r3,96(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L74
	nop	; delay slot nop
L80:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x3
	sub	r2,r2,r1
	slli	r3,r2,#0x2
	sub	r3,r3,r1
	slli	r1,r3,#0x2
	lhi	r6,((_mbox_buffers)>>16)&0xffff
	addui	r6,r6,(_mbox_buffers)&0xffff
	add	r2,r1,r6
	lw	r1,100(r2)
	lw	r2,4(r30)
	sgt	r1,r1,r2
	beqz	r1,L81
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	lw	r3,96(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L74
	nop	; delay slot nop
L81:
	nop
	addi	r1,r0,#0
	sw	-20(r30),r1
L82:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x3
	sub	r2,r2,r1
	slli	r3,r2,#0x2
	sub	r3,r3,r1
	slli	r1,r3,#0x2
	lhi	r6,((_mbox_buffers)>>16)&0xffff
	addui	r6,r6,(_mbox_buffers)&0xffff
	add	r2,r1,r6
	lw	r1,-20(r30)
	lw	r2,100(r2)
	slt	r1,r1,r2
	bnez	r1,L85
	nop	; delay slot nop
	j	L83
	nop	; delay slot nop
L85:
	lw	r1,-28(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	lhi	r6,((_mbox_buffers)>>16)&0xffff
	addui	r6,r6,(_mbox_buffers)&0xffff
	add	r3,r2,r6
	lw	r4,-20(r30)
	add	r2,r3,r4
	lb	r3,(r2)
	sb	(r1),r3
L84:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L82
	nop	; delay slot nop
L83:
	lw	r1,-24(r30)
	lw	r2,-24(r30)
	lw	r3,76(r2)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#36
	addi	r1,r0,#-1
	sw	(r2),r1
	lhi	r1,((_mbox_buffers)>>16)&0xffff
	addui	r1,r1,(_mbox_buffers)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,(#0x0)&0xff
	sb	104(r1),r2
	lw	r1,-24(r30)
	lw	r2,-24(r30)
	lw	r3,76(r2)
	addi	r2,r3,#1
	addi	r4,r0,#10
	movi2fp	f0,r2
	movi2fp	f1,r4
	div	f0,f0,f1
	movfp2i	r3,f0
	add	r5,r0,r3
	slli	r4,r5,#0x2
	add	r4,r4,r3
	slli	r3,r4,#0x1
	sub	r2,r2,r3
	sw	76(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	lw	r3,88(r2)
	sw	(r1),r3
	jal	_SemHandleSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	lw	r3,96(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x3
	sub	r2,r2,r1
	slli	r3,r2,#0x2
	sub	r3,r3,r1
	slli	r1,r3,#0x2
	lhi	r6,((_mbox_buffers)>>16)&0xffff
	addui	r6,r6,(_mbox_buffers)&0xffff
	add	r2,r1,r6
	lw	r1,100(r2)
	j	L74
	nop	; delay slot nop
L74:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxRecv
	.align 2
.proc _MboxCloseAllByPid
.global _MboxCloseAllByPid
_MboxCloseAllByPid:
;  Function 'MboxCloseAllByPid'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L87:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L90
	nop	; delay slot nop
	j	L88
	nop	; delay slot nop
L90:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x1
	add	r2,r2,r1
	slli	r3,r2,#0x2
	add	r3,r3,r1
	slli	r1,r3,#0x3
	lhi	r2,((_mboxes)>>16)&0xffff
	addui	r2,r2,(_mboxes)&0xffff
	add	r1,r2,r1
	sw	-24(r30),r1
	lw	r1,-24(r30)
	lw	r2,(r30)
	add	r1,r1,r2
	lbu	r2,(r1)
	seqi	r1,r2,#1
	beqz	r1,L89
	nop	; delay slot nop
	lw	r1,-24(r30)
	lw	r2,(r30)
	add	r1,r1,r2
	addi	r2,r0,(#0x0)&0xff
	sb	(r1),r2
	lw	r1,-24(r30)
	lw	r2,-24(r30)
	lw	r3,32(r2)
	addi	r2,r3,#-1
	sw	32(r1),r2
	add	r2,r0,r29
	jal	_DisableIntrs
	nop	; delay slot nop
	sw	-20(r30),r1
	lw	r1,-24(r30)
	lw	r2,32(r1)
	snei	r1,r2,#0
	bnez	r1,L92
	nop	; delay slot nop
	lw	r1,-24(r30)
	lw	r2,76(r1)
	sw	-16(r30),r2
L93:
	lw	r1,-24(r30)
	lw	r2,-16(r30)
	lw	r1,80(r1)
	sle	r2,r2,r1
	bnez	r2,L96
	nop	; delay slot nop
	j	L94
	nop	; delay slot nop
L96:
	lhi	r1,((_mbox_buffers)>>16)&0xffff
	addui	r1,r1,(_mbox_buffers)&0xffff
	lw	r2,-24(r30)
	lw	r3,-16(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#36
	lw	r2,(r3)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,(#0x0)&0xff
	sb	104(r1),r2
	lw	r1,-24(r30)
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#36
	addi	r1,r0,#-1
	sw	(r2),r1
L95:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	addi	r3,r0,#10
	movi2fp	f0,r1
	movi2fp	f1,r3
	div	f0,f0,f1
	movfp2i	r2,f0
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x1
	sub	r1,r1,r2
	sw	-16(r30),r1
	j	L93
	nop	; delay slot nop
L94:
	lw	r1,-24(r30)
	addi	r2,r0,#0
	sw	76(r1),r2
	lw	r1,-24(r30)
	addi	r2,r0,#0
	sw	80(r1),r2
	lw	r1,-24(r30)
	addi	r2,r0,(#0x0)&0xff
	sb	84(r1),r2
L92:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	sw	(r1),r2
	jal	_RestoreIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
L91:
L89:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L87
	nop	; delay slot nop
L88:
	addi	r1,r0,#1
	j	L86
	nop	; delay slot nop
L86:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxCloseAllByPid
.data
	.align 2
_mboxes:
	.space 1664
	.align 2
_mbox_buffers:
	.space 5400
	.align 2
_l_buff:
	.space 4
