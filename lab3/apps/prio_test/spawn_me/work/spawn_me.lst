 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 178
    4                      ; Text size: 4460
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <program index> <handle_to_page_mapped_semaphore> (argc was "
   82  00003004  653a2025	
   82  00003008  73203c70	
   82  0000300c  726f6772	
   82  00003010  616d2069	
   82  00003014  6e646578	
   82  00003018  3e203c68	
   82  0000301c  616e646c	
   82  00003020  655f746f	
   82  00003024  5f706167	
   82  00003028  655f6d61	
   82  0000302c  70706564	
   82  00003030  5f73656d	
   82  00003034  6170686f	
   82  00003038  72653e20	
   82  0000303c  28617267	
   82  00003040  63207761	
   82  00003044  7320    	
   83  00003046  2564290a	.ascii "%d)\n\000"
   83  0000304a  00      	
   84  0000304b          	.align 2
   85  0000304c          	LC1_LF0:
   86  0000304c  73706177	.ascii "spawn_me (%d): %c%d\n\000"
   86  00003050  6e5f6d65	
   86  00003054  20282564	
   86  00003058  293a2025	
   86  0000305c  6325640a	
   86  00003060  00      	
   87  00003061          	.align 2
   88  00003064          	LC2_LF0:
   89  00003064  73706177	.ascii "spawn_me (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   89  00003068  6e5f6d65	
   89  0000306c  20282564	
   89  00003070  293a2042	
   89  00003074  61642073	
   89  00003078  656d6170	
   89  0000307c  686f7265	
   89  00003080  20735f70	
   89  00003084  726f6373	
   89  00003088  5f636f6d	
   89  0000308c  706c6574	
   89  00003090  65642028	
   89  00003094  25642921	
   89  00003098  0a00    	
   90  0000309a          	.align 2
   91  0000309c          	LC3_LF0:
   92  0000309c  73706177	.ascii "spawn_me (%d): Done!\n\000"
   92  000030a0  6e5f6d65	
   92  000030a4  20282564	
   92  000030a8  293a2044	
   92  000030ac  6f6e6521	
   92  000030b0  0a00    	
   93  000030b2          	.text
   94  000010d4          	.align 2
   95  000010d4          	.proc _main
   96  000010d4          	.global _main
   97  000010d4          	_main:
   98                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   99  000010d4  afbefffc	sw	-4(r29),r30; push fp
  100  000010d8  001df020	add	r30,r0,r29; fp = sp
  101  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  102  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  103  000010e4  8fc20000	lw	r2,(r30)
  104  000010e8  8fc40004	lw	r4,4(r30)
  105  000010ec  0c001074	jal	___main
  106  000010f0  54000000	nop; not filled.
  107  000010f4  20030000	addi	r3,r0,#0
  108  000010f8  64410003	snei	r1,r2,#3
  109  000010fc  1020002c	beqz	r1,L14_LF0
  110  00001100  54000000	nop; not filled.
  111  00001104  23bdfff8	addi	r29,r29,#-8
  112  00001108  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  113  0000110c  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  114  00001110  afa60000	sw	(r29),r6
  115  00001114  afa20004	sw	4(r29),r2
  116  00001118  0c000198	jal	_Printf
  117  0000111c  54000000	nop; not filled.
  118  00001120  0c000298	jal	_Exit
  119  00001124  54000000	nop; not filled.
  120  00001128  23bd0008	addi	r29,r29,#8
  121  0000112c          	L14_LF0:
  122  0000112c  23bdfff0	addi	r29,r29,#-16
  123  00001130  8c860004	lw	r6,4(r4)
  124  00001134  afa60000	sw	(r29),r6
  125  00001138  20060000	addi	r6,r0,#0
  126  0000113c  afa60004	sw	4(r29),r6
  127  00001140  2006000a	addi	r6,r0,#10
  128  00001144  afa60008	sw	8(r29),r6
  129  00001148  0c000b1c	jal	_dstrtol
  130  0000114c  54000000	nop; not filled.
  131  00001150  00011020	add	r2,r0,r1
  132  00001154  8c840008	lw	r4,8(r4)
  133  00001158  afa40000	sw	(r29),r4
  134  0000115c  20060000	addi	r6,r0,#0
  135  00001160  afa60004	sw	4(r29),r6
  136  00001164  2006000a	addi	r6,r0,#10
  137  00001168  afa60008	sw	8(r29),r6
  138  0000116c  0c000af8	jal	_dstrtol
  139  00001170  54000000	nop; not filled.
  140  00001174  00012820	add	r5,r0,r1
  141  00001178  23bd0010	addi	r29,r29,#16
  142  0000117c  20440041	addi	r4,r2,#65
  143  00001180  2402c34f	addui	r2,r0,#49999
  144  00001184          	L18_LF0:
  145  00001184  0c000138	jal	_getpid
  146  00001188  54000000	nop; not filled.
  147  0000118c  23bdfff0	addi	r29,r29,#-16
  148  00001190  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  149  00001194  24c6304c	addui	r6,r6,(LC1_LF0)&0xffff
  150  00001198  afa60000	sw	(r29),r6
  151  0000119c  afa10004	sw	4(r29),r1
  152  000011a0  afa40008	sw	8(r29),r4
  153  000011a4  afa3000c	sw	12(r29),r3
  154  000011a8  0c000108	jal	_Printf
  155  000011ac  54000000	nop; not filled.
  156  000011b0  2006000a	addi	r6,r0,#10
  157  000011b4  afa60000	sw	(r29),r6
  158  000011b8  0c0001e8	jal	_sleep
  159  000011bc  54000000	nop; not filled.
  160  000011c0  201f0000	addi	r31,r0,#0
  161  000011c4  23bd0010	addi	r29,r29,#16
  162  000011c8          	L21_LF0:
  163  000011c8  23ff0001	addi	r31,r31,#1
  164  000011cc  03e2082c	sle	r1,r31,r2
  165  000011d0  1420fff4	bnez	r1,L21_LF0
  166  000011d4  54000000	nop; not filled.
  167  000011d8  20630001	addi	r3,r3,#1
  168  000011dc  7061001d	slei	r1,r3,#29
  169  000011e0  1420ffa0	bnez	r1,L18_LF0
  170  000011e4  54000000	nop; not filled.
  171  000011e8  23bdfff8	addi	r29,r29,#-8
  172  000011ec  afa50000	sw	(r29),r5
  173  000011f0  0c000114	jal	_sem_signal
  174  000011f4  54000000	nop; not filled.
  175  000011f8  23bd0008	addi	r29,r29,#8
  176  000011fc  64210001	snei	r1,r1,#1
  177  00001200  10200038	beqz	r1,L25_LF0
  178  00001204  54000000	nop; not filled.
  179  00001208  0c0000b4	jal	_getpid
  180  0000120c  54000000	nop; not filled.
  181  00001210  23bdfff0	addi	r29,r29,#-16
  182  00001214  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  183  00001218  24c63064	addui	r6,r6,(LC2_LF0)&0xffff
  184  0000121c  afa60000	sw	(r29),r6
  185  00001220  afa10004	sw	4(r29),r1
  186  00001224  afa50008	sw	8(r29),r5
  187  00001228  0c000088	jal	_Printf
  188  0000122c  54000000	nop; not filled.
  189  00001230  0c000188	jal	_Exit
  190  00001234  54000000	nop; not filled.
  191  00001238  23bd0010	addi	r29,r29,#16
  192  0000123c          	L25_LF0:
  193  0000123c  0c000080	jal	_getpid
  194  00001240  54000000	nop; not filled.
  195  00001244  23bdfff8	addi	r29,r29,#-8
  196  00001248  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  197  0000124c  24c6309c	addui	r6,r6,(LC3_LF0)&0xffff
  198  00001250  afa60000	sw	(r29),r6
  199  00001254  afa10004	sw	4(r29),r1
  200  00001258  0c000058	jal	_Printf
  201  0000125c  54000000	nop; not filled.
  202  00001260  23bd0008	addi	r29,r29,#8
  203  00001264  0c000ef0	jal	_exit
  204  00001268  54000000	nop
  205  0000126c          	.endproc _main
  206                      ;;;
  207                      ;;; Stub functions for DLX traps.
  208                      ;;;
  209                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  210                      ;;;
  211                      ;;; The traps such as Open and Close
  212                      ;;; (note the capital letters) are for use by user programs.  The traps
  213                      ;;; with names such as open and close (lower case) are for use by the OS.
  214                      ;;;
  217  0000126c          	.align 2
  219                      ;;; The following are the traps to be used by user-level programs
  220                      ;;;
  222  0000126c          	.align 2
  223  0000126c          	.proc _Open
  224  0000126c          	.global _Open
  225  0000126c          	_Open:
  226                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  227                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  228                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  229  0000126c  44000213	trap	#0x213
  230  00001270  4be00000	jr	r31
  231  00001274  54000000	nop
  232  00001278          	.endproc _Open
  234  00001278          	.proc _Close
  235  00001278          	.global _Close
  236  00001278          	_Close:
  237  00001278  44000214	trap	#0x214
  238  0000127c  4be00000	jr	r31
  239  00001280  54000000	nop
  240  00001284          	.endproc _Close
  242  00001284          	.proc _Read
  243  00001284          	.global _Read
  244  00001284          	_Read:
  245  00001284  44000210	trap	#0x210
  246  00001288  4be00000	jr	r31
  247  0000128c  54000000	nop
  248  00001290          	.endproc _Read
  250  00001290          	.proc _Write
  251  00001290          	.global _Write
  252  00001290          	_Write:
  253  00001290  44000211	trap	#0x211
  254  00001294  4be00000	jr	r31
  255  00001298  54000000	nop
  256  0000129c          	.endproc _Write
  258  0000129c          	.proc _Lseek
  259  0000129c          	.global _Lseek
  260  0000129c          	_Lseek:
  261  0000129c  44000212	trap	#0x212
  262  000012a0  4be00000	jr	r31
  263  000012a4  54000000	nop
  264  000012a8          	.endproc _Lseek
  266  000012a8          	.proc _Putchar
  267  000012a8          	.global _Putchar
  268  000012a8          	_Putchar:
  269  000012a8  44000280	trap	#0x280
  270  000012ac  4be00000	jr	r31
  271  000012b0  54000000	nop
  272  000012b4          	.endproc _Putchar
  274  000012b4          	.proc _Printf
  275  000012b4          	.global _Printf
  276  000012b4          	_Printf:
  277  000012b4  44000201	trap	#0x201
  278  000012b8  4be00000	jr	r31
  279  000012bc  54000000	nop
  280  000012c0          	.endproc _Printf
  282  000012c0          	.proc _getpid
  283  000012c0          	.global _getpid
  284  000012c0          	_getpid:
  285  000012c0  44000431	trap	#0x431
  286  000012c4  4be00000	jr	r31
  287  000012c8  54000000	nop
  288  000012cc          	.endproc _getpid
  290  000012cc          	.proc _process_create
  291  000012cc          	.global _process_create
  292  000012cc          	_process_create:
  293  000012cc  44000432	trap	#0x432
  294  000012d0  4be00000	jr	r31
  295  000012d4  54000000	nop
  296  000012d8          	.endproc _process_create
  298  000012d8          	.proc _shmget
  299  000012d8          	.global _shmget
  300  000012d8          	_shmget:
  301  000012d8  44000440	trap	#0x440
  302  000012dc  4be00000	jr	r31
  303  000012e0  54000000	nop
  304  000012e4          	.endproc _shmget
  306  000012e4          	.proc _shmat
  307  000012e4          	.global _shmat
  308  000012e4          	_shmat:
  309  000012e4  44000441	trap	#0x441
  310  000012e8  4be00000	jr	r31
  311  000012ec  54000000	nop
  312  000012f0          	.endproc _shmat
  314  000012f0          	.proc _sem_create
  315  000012f0          	.global _sem_create
  316  000012f0          	_sem_create:
  317  000012f0  44000450	trap	#0x450
  318  000012f4  4be00000	jr	r31
  319  000012f8  54000000	nop
  320  000012fc          	.endproc _sem_create
  322  000012fc          	.proc _sem_wait
  323  000012fc          	.global _sem_wait
  324  000012fc          	_sem_wait:
  325  000012fc  44000451	trap	#0x451
  326  00001300  4be00000	jr	r31
  327  00001304  54000000	nop
  328  00001308          	.endproc _sem_wait
  330  00001308          	.proc _sem_signal
  331  00001308          	.global _sem_signal
  332  00001308          	_sem_signal:
  333  00001308  44000452	trap	#0x452
  334  0000130c  4be00000	jr	r31
  335  00001310  54000000	nop
  336  00001314          	.endproc _sem_signal
  338  00001314          	.proc _lock_create
  339  00001314          	.global _lock_create
  340  00001314          	_lock_create:
  341  00001314  44000453	trap	#0x453
  342  00001318  4be00000	jr	r31
  343  0000131c  54000000	nop
  344  00001320          	.endproc _lock_create
  346  00001320          	.proc _lock_acquire
  347  00001320          	.global _lock_acquire
  348  00001320          	_lock_acquire:
  349  00001320  44000454	trap	#0x454
  350  00001324  4be00000	jr	r31
  351  00001328  54000000	nop
  352  0000132c          	.endproc _lock_acquire
  354  0000132c          	.proc _lock_release
  355  0000132c          	.global _lock_release
  356  0000132c          	_lock_release:
  357  0000132c  44000455	trap	#0x455
  358  00001330  4be00000	jr	r31
  359  00001334  54000000	nop
  360  00001338          	.endproc _lock_release
  362  00001338          	.proc _cond_create
  363  00001338          	.global _cond_create
  364  00001338          	_cond_create:
  365  00001338  44000456	trap	#0x456
  366  0000133c  4be00000	jr	r31
  367  00001340  54000000	nop
  368  00001344          	.endproc _cond_create
  370  00001344          	.proc _cond_wait
  371  00001344          	.global _cond_wait
  372  00001344          	_cond_wait:
  373  00001344  44000457	trap	#0x457
  374  00001348  4be00000	jr	r31
  375  0000134c  54000000	nop
  376  00001350          	.endproc _cond_wait
  378  00001350          	.proc _cond_signal
  379  00001350          	.global _cond_signal
  380  00001350          	_cond_signal:
  381  00001350  44000458	trap	#0x458
  382  00001354  4be00000	jr	r31
  383  00001358  54000000	nop
  384  0000135c          	.endproc _cond_signal
  386  0000135c          	.proc _cond_broadcast
  387  0000135c          	.global _cond_broadcast
  388  0000135c          	_cond_broadcast:
  389  0000135c  44000459	trap	#0x459
  390  00001360  4be00000	jr	r31
  391  00001364  54000000	nop
  392  00001368          	.endproc _cond_broadcast
  394  00001368          	.proc _mbox_create
  395  00001368          	.global _mbox_create
  396  00001368          	_mbox_create:
  397  00001368  44000460	trap	#0x460
  398  0000136c  4be00000	jr	r31
  399  00001370  54000000	nop
  400  00001374          	.endproc _mbox_create
  402  00001374          	.proc _mbox_open
  403  00001374          	.global _mbox_open
  404  00001374          	_mbox_open:
  405  00001374  44000461	trap	#0x461
  406  00001378  4be00000	jr	r31
  407  0000137c  54000000	nop
  408  00001380          	.endproc _mbox_open
  410  00001380          	.proc _mbox_close
  411  00001380          	.global _mbox_close
  412  00001380          	_mbox_close:
  413  00001380  44000462	trap	#0x462
  414  00001384  4be00000	jr	r31
  415  00001388  54000000	nop
  416  0000138c          	.endproc _mbox_close
  418  0000138c          	.proc _mbox_send
  419  0000138c          	.global _mbox_send
  420  0000138c          	_mbox_send:
  421  0000138c  44000463	trap	#0x463
  422  00001390  4be00000	jr	r31
  423  00001394  54000000	nop
  424  00001398          	.endproc _mbox_send
  426  00001398          	.proc _mbox_recv
  427  00001398          	.global _mbox_recv
  428  00001398          	_mbox_recv:
  429  00001398  44000464	trap	#0x464
  430  0000139c  4be00000	jr	r31
  431  000013a0  54000000	nop
  432  000013a4          	.endproc _mbox_recv
  434  000013a4          	.proc _sleep
  435  000013a4          	.global _sleep
  436  000013a4          	_sleep:
  437  000013a4  44000465	trap	#0x465
  438  000013a8  4be00000	jr	r31
  439  000013ac  54000000	nop
  440  000013b0          	.endproc _sleep
  442  000013b0          	.proc _yield
  443  000013b0          	.global _yield
  444  000013b0          	_yield:
  445  000013b0  44000466	trap	#0x466
  446  000013b4  4be00000	jr	r31
  447  000013b8  54000000	nop
  448  000013bc          	.endproc _yield
  451  000013bc          	.proc _Exit
  452  000013bc          	.global _Exit
  453  000013bc          	_Exit:
  454  000013bc  44000500	trap	#0x500
  455  000013c0  4be00000	jr	r31
  456  000013c4  54000000	nop
  457  000013c8          	.endproc _Exit
  458                      ; Compiled by GCC
  460  000013c8          	.align 2
  461  000013c8          	.proc _isspace
  462  000013c8          	.global _isspace
  463  000013c8          	_isspace:
  464                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  465  000013c8  afbefffc	sw	-4(r29),r30; push fp
  466  000013cc  001df020	add	r30,r0,r29; fp = sp
  467  000013d0  afbffff8	sw	-8(r29),r31; push ret addr
  468  000013d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  469  000013d8  afa20000	sw	0(r29),r2
  470  000013dc  afa30004	sw	4(r29),r3
  471  000013e0  afa40008	sw	8(r29),r4
  472  000013e4  83c20003	lb	r2,3(r30)
  473  000013e8  20010000	addi	r1,r0,#0
  474  000013ec  304300ff	andi	r3,r2,#0x00ff
  475  000013f0  60640020	seqi	r4,r3,#32
  476  000013f4  1480002c	bnez	r4,L3_LF2
  477  000013f8  54000000	nop; delay slot nop
  478  000013fc  304300ff	andi	r3,r2,#0x00ff
  479  00001400  60640009	seqi	r4,r3,#9
  480  00001404  1480001c	bnez	r4,L3_LF2
  481  00001408  54000000	nop; delay slot nop
  482  0000140c  304300ff	andi	r3,r2,#0x00ff
  483  00001410  6064000a	seqi	r4,r3,#10
  484  00001414  1480000c	bnez	r4,L3_LF2
  485  00001418  54000000	nop; delay slot nop
  486  0000141c  08000008	j	L2_LF2
  487  00001420  54000000	nop; delay slot nop
  488  00001424          	L3_LF2:
  489  00001424  20010001	addi	r1,r0,#1
  490  00001428          	L2_LF2:
  491  00001428  08000004	j	L1_LF2
  492  0000142c  54000000	nop; delay slot nop
  493  00001430          	L1_LF2:
  494  00001430  8fa20000	lw	r2,0(r29)
  495  00001434  8fa30004	lw	r3,4(r29)
  496  00001438  8fa40008	lw	r4,8(r29)
  497  0000143c  8fdffff8	lw	r31,-8(r30)
  498  00001440  001ee820	add	r29,r0,r30
  499  00001444  8fdefffc	lw	r30,-4(r30)
  500  00001448  4be00000	jr	r31
  501  0000144c  54000000	nop
  502  00001450          	.endproc _isspace
  503  00001450          	.align 2
  504  00001450          	.proc _isxdigit
  505  00001450          	.global _isxdigit
  506  00001450          	_isxdigit:
  507                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  508  00001450  afbefffc	sw	-4(r29),r30; push fp
  509  00001454  001df020	add	r30,r0,r29; fp = sp
  510  00001458  afbffff8	sw	-8(r29),r31; push ret addr
  511  0000145c  2fbd0018	subui	r29,r29,#24; alloc local storage
  512  00001460  afa20000	sw	0(r29),r2
  513  00001464  afa30004	sw	4(r29),r3
  514  00001468  afa40008	sw	8(r29),r4
  515  0000146c  83c20003	lb	r2,3(r30)
  516  00001470  20010000	addi	r1,r0,#0
  517  00001474  304300ff	andi	r3,r2,#0x00ff
  518  00001478  6c64002f	sgtui	r4,r3,#47
  519  0000147c  1080001c	beqz	r4,L7_LF2
  520  00001480  54000000	nop; delay slot nop
  521  00001484  304300ff	andi	r3,r2,#0x00ff
  522  00001488  70640039	sleui	r4,r3,#57
  523  0000148c  1480005c	bnez	r4,L6_LF2
  524  00001490  54000000	nop; delay slot nop
  525  00001494  08000004	j	L7_LF2
  526  00001498  54000000	nop; delay slot nop
  527  0000149c          	L7_LF2:
  528  0000149c  304300ff	andi	r3,r2,#0x00ff
  529  000014a0  6c640060	sgtui	r4,r3,#96
  530  000014a4  1080001c	beqz	r4,L8_LF2
  531  000014a8  54000000	nop; delay slot nop
  532  000014ac  304300ff	andi	r3,r2,#0x00ff
  533  000014b0  70640066	sleui	r4,r3,#102
  534  000014b4  14800034	bnez	r4,L6_LF2
  535  000014b8  54000000	nop; delay slot nop
  536  000014bc  08000004	j	L8_LF2
  537  000014c0  54000000	nop; delay slot nop
  538  000014c4          	L8_LF2:
  539  000014c4  304300ff	andi	r3,r2,#0x00ff
  540  000014c8  6c640040	sgtui	r4,r3,#64
  541  000014cc  10800020	beqz	r4,L5_LF2
  542  000014d0  54000000	nop; delay slot nop
  543  000014d4  304300ff	andi	r3,r2,#0x00ff
  544  000014d8  70640041	sleui	r4,r3,#65
  545  000014dc  1480000c	bnez	r4,L6_LF2
  546  000014e0  54000000	nop; delay slot nop
  547  000014e4  08000008	j	L5_LF2
  548  000014e8  54000000	nop; delay slot nop
  549  000014ec          	L6_LF2:
  550  000014ec  20010001	addi	r1,r0,#1
  551  000014f0          	L5_LF2:
  552  000014f0  08000004	j	L4_LF2
  553  000014f4  54000000	nop; delay slot nop
  554  000014f8          	L4_LF2:
  555  000014f8  8fa20000	lw	r2,0(r29)
  556  000014fc  8fa30004	lw	r3,4(r29)
  557  00001500  8fa40008	lw	r4,8(r29)
  558  00001504  8fdffff8	lw	r31,-8(r30)
  559  00001508  001ee820	add	r29,r0,r30
  560  0000150c  8fdefffc	lw	r30,-4(r30)
  561  00001510  4be00000	jr	r31
  562  00001514  54000000	nop
  563  00001518          	.endproc _isxdigit
  564  00001518          	.align 2
  565  00001518          	.proc _dstrcpy
  566  00001518          	.global _dstrcpy
  567  00001518          	_dstrcpy:
  568                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  569  00001518  afbefffc	sw	-4(r29),r30; push fp
  570  0000151c  001df020	add	r30,r0,r29; fp = sp
  571  00001520  afbffff8	sw	-8(r29),r31; push ret addr
  572  00001524  2fbd0018	subui	r29,r29,#24; alloc local storage
  573  00001528  afa20000	sw	0(r29),r2
  574  0000152c  afa30004	sw	4(r29),r3
  575  00001530  8fc10000	lw	r1,(r30)
  576  00001534  afc1fff4	sw	-12(r30),r1
  577  00001538          	L10_LF2:
  578  00001538  8fc10000	lw	r1,(r30)
  579  0000153c  20220001	addi	r2,r1,#1
  580  00001540  afc20000	sw	(r30),r2
  581  00001544  8fc20004	lw	r2,4(r30)
  582  00001548  20430001	addi	r3,r2,#1
  583  0000154c  afc30004	sw	4(r30),r3
  584  00001550  80420000	lb	r2,(r2)
  585  00001554  a0220000	sb	(r1),r2
  586  00001558  a3c2fff3	sb	-13(r30),r2
  587  0000155c          	L12_LF2:
  588  0000155c  93c1fff3	lbu	r1,-13(r30)
  589  00001560  64220000	snei	r2,r1,#0
  590  00001564  1440000c	bnez	r2,L13_LF2
  591  00001568  54000000	nop; delay slot nop
  592  0000156c  0800000c	j	L11_LF2
  593  00001570  54000000	nop; delay slot nop
  594  00001574          	L13_LF2:
  595  00001574  0bffffc0	j	L10_LF2
  596  00001578  54000000	nop; delay slot nop
  597  0000157c          	L11_LF2:
  598  0000157c  8fc1fff4	lw	r1,-12(r30)
  599  00001580  08000004	j	L9_LF2
  600  00001584  54000000	nop; delay slot nop
  601  00001588          	L9_LF2:
  602  00001588  8fa20000	lw	r2,0(r29)
  603  0000158c  8fa30004	lw	r3,4(r29)
  604  00001590  8fdffff8	lw	r31,-8(r30)
  605  00001594  001ee820	add	r29,r0,r30
  606  00001598  8fdefffc	lw	r30,-4(r30)
  607  0000159c  4be00000	jr	r31
  608  000015a0  54000000	nop
  609  000015a4          	.endproc _dstrcpy
  610  000015a4          	.align 2
  611  000015a4          	.proc _dstrncpy
  612  000015a4          	.global _dstrncpy
  613  000015a4          	_dstrncpy:
  614                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  615  000015a4  afbefffc	sw	-4(r29),r30; push fp
  616  000015a8  001df020	add	r30,r0,r29; fp = sp
  617  000015ac  afbffff8	sw	-8(r29),r31; push ret addr
  618  000015b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  619  000015b4  afa20000	sw	0(r29),r2
  620  000015b8  afa30004	sw	4(r29),r3
  621  000015bc  8fc10000	lw	r1,(r30)
  622  000015c0  afc1fff4	sw	-12(r30),r1
  623  000015c4          	L15_LF2:
  624  000015c4  8fc10008	lw	r1,8(r30)
  625  000015c8  2022ffff	addi	r2,r1,#-1
  626  000015cc  afc20008	sw	8(r30),r2
  627  000015d0  70210000	slei	r1,r1,#0
  628  000015d4  1020000c	beqz	r1,L18_LF2
  629  000015d8  54000000	nop; delay slot nop
  630  000015dc  08000048	j	L16_LF2
  631  000015e0  54000000	nop; delay slot nop
  632  000015e4          	L18_LF2:
  633  000015e4  8fc10000	lw	r1,(r30)
  634  000015e8  20220001	addi	r2,r1,#1
  635  000015ec  afc20000	sw	(r30),r2
  636  000015f0  8fc20004	lw	r2,4(r30)
  637  000015f4  20430001	addi	r3,r2,#1
  638  000015f8  afc30004	sw	4(r30),r3
  639  000015fc  80420000	lb	r2,(r2)
  640  00001600  a0220000	sb	(r1),r2
  641  00001604  a3c2fff3	sb	-13(r30),r2
  642  00001608          	L17_LF2:
  643  00001608  93c1fff3	lbu	r1,-13(r30)
  644  0000160c  64220000	snei	r2,r1,#0
  645  00001610  1440000c	bnez	r2,L19_LF2
  646  00001614  54000000	nop; delay slot nop
  647  00001618  0800000c	j	L16_LF2
  648  0000161c  54000000	nop; delay slot nop
  649  00001620          	L19_LF2:
  650  00001620  0bffffa0	j	L15_LF2
  651  00001624  54000000	nop; delay slot nop
  652  00001628          	L16_LF2:
  653  00001628  8fc1fff4	lw	r1,-12(r30)
  654  0000162c  08000004	j	L14_LF2
  655  00001630  54000000	nop; delay slot nop
  656  00001634          	L14_LF2:
  657  00001634  8fa20000	lw	r2,0(r29)
  658  00001638  8fa30004	lw	r3,4(r29)
  659  0000163c  8fdffff8	lw	r31,-8(r30)
  660  00001640  001ee820	add	r29,r0,r30
  661  00001644  8fdefffc	lw	r30,-4(r30)
  662  00001648  4be00000	jr	r31
  663  0000164c  54000000	nop
  664  00001650          	.endproc _dstrncpy
  665  00001650          	.align 2
  666  00001650          	.proc _dstrcat
  667  00001650          	.global _dstrcat
  668  00001650          	_dstrcat:
  669                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  670  00001650  afbefffc	sw	-4(r29),r30; push fp
  671  00001654  001df020	add	r30,r0,r29; fp = sp
  672  00001658  afbffff8	sw	-8(r29),r31; push ret addr
  673  0000165c  2fbd0018	subui	r29,r29,#24; alloc local storage
  674  00001660  afa20000	sw	0(r29),r2
  675  00001664  8fc10000	lw	r1,(r30)
  676  00001668  afc1fff4	sw	-12(r30),r1
  677  0000166c          	L21_LF2:
  678  0000166c  8fc10000	lw	r1,(r30)
  679  00001670  90220000	lbu	r2,(r1)
  680  00001674  64410000	snei	r1,r2,#0
  681  00001678  1420000c	bnez	r1,L23_LF2
  682  0000167c  54000000	nop; delay slot nop
  683  00001680  0800001c	j	L22_LF2
  684  00001684  54000000	nop; delay slot nop
  685  00001688          	L23_LF2:
  686  00001688  8fc20000	lw	r2,(r30)
  687  0000168c  20410001	addi	r1,r2,#1
  688  00001690  00011020	add	r2,r0,r1
  689  00001694  afc20000	sw	(r30),r2
  690  00001698  0bffffd0	j	L21_LF2
  691  0000169c  54000000	nop; delay slot nop
  692  000016a0          	L22_LF2:
  693  000016a0  23bdfff8	addi	r29,r29,#-8
  694  000016a4  001d0820	add	r1,r0,r29
  695  000016a8  8fc20000	lw	r2,(r30)
  696  000016ac  ac220000	sw	(r1),r2
  697  000016b0  8fc20004	lw	r2,4(r30)
  698  000016b4  ac220004	sw	4(r1),r2
  699  000016b8  0ffffe5c	jal	_dstrcpy
  700  000016bc  54000000	nop; delay slot nop
  701  000016c0  23bd0008	addi	r29,r29,#8
  702  000016c4  8fc1fff4	lw	r1,-12(r30)
  703  000016c8  08000004	j	L20_LF2
  704  000016cc  54000000	nop; delay slot nop
  705  000016d0          	L20_LF2:
  706  000016d0  8fa20000	lw	r2,0(r29)
  707  000016d4  8fdffff8	lw	r31,-8(r30)
  708  000016d8  001ee820	add	r29,r0,r30
  709  000016dc  8fdefffc	lw	r30,-4(r30)
  710  000016e0  4be00000	jr	r31
  711  000016e4  54000000	nop
  712  000016e8          	.endproc _dstrcat
  713  000016e8          	.align 2
  714  000016e8          	.proc _dstrncmp
  715  000016e8          	.global _dstrncmp
  716  000016e8          	_dstrncmp:
  717                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  718  000016e8  afbefffc	sw	-4(r29),r30; push fp
  719  000016ec  001df020	add	r30,r0,r29; fp = sp
  720  000016f0  afbffff8	sw	-8(r29),r31; push ret addr
  721  000016f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  722  000016f8  afa20000	sw	0(r29),r2
  723  000016fc  afa30004	sw	4(r29),r3
  724  00001700  54000000	nop
  725  00001704  20010000	addi	r1,r0,#0
  726  00001708  afc1fff4	sw	-12(r30),r1
  727  0000170c          	L25_LF2:
  728  0000170c  8fc1fff4	lw	r1,-12(r30)
  729  00001710  8fc20008	lw	r2,8(r30)
  730  00001714  0022082a	slt	r1,r1,r2
  731  00001718  1420000c	bnez	r1,L28_LF2
  732  0000171c  54000000	nop; delay slot nop
  733  00001720  08000088	j	L26_LF2
  734  00001724  54000000	nop; delay slot nop
  735  00001728          	L28_LF2:
  736  00001728  8fc10004	lw	r1,4(r30)
  737  0000172c  90220000	lbu	r2,(r1)
  738  00001730  64410000	snei	r1,r2,#0
  739  00001734  14200018	bnez	r1,L29_LF2
  740  00001738  54000000	nop; delay slot nop
  741  0000173c  20010000	addi	r1,r0,#0
  742  00001740  080000d8	j	L24_LF2
  743  00001744  54000000	nop; delay slot nop
  744  00001748  08000028	j	L30_LF2
  745  0000174c  54000000	nop; delay slot nop
  746  00001750          	L29_LF2:
  747  00001750  8fc10000	lw	r1,(r30)
  748  00001754  8fc20004	lw	r2,4(r30)
  749  00001758  90210000	lbu	r1,(r1)
  750  0000175c  90420000	lbu	r2,(r2)
  751  00001760  00220829	sne	r1,r1,r2
  752  00001764  1020000c	beqz	r1,L30_LF2
  753  00001768  54000000	nop; delay slot nop
  754  0000176c  0800003c	j	L26_LF2
  755  00001770  54000000	nop; delay slot nop
  756  00001774          	L31_LF2:
  757  00001774          	L30_LF2:
  758  00001774  8fc20000	lw	r2,(r30)
  759  00001778  20410001	addi	r1,r2,#1
  760  0000177c  00011020	add	r2,r0,r1
  761  00001780  afc20000	sw	(r30),r2
  762  00001784  8fc20004	lw	r2,4(r30)
  763  00001788  20410001	addi	r1,r2,#1
  764  0000178c  00011020	add	r2,r0,r1
  765  00001790  afc20004	sw	4(r30),r2
  766  00001794          	L27_LF2:
  767  00001794  8fc2fff4	lw	r2,-12(r30)
  768  00001798  20410001	addi	r1,r2,#1
  769  0000179c  00011020	add	r2,r0,r1
  770  000017a0  afc2fff4	sw	-12(r30),r2
  771  000017a4  0bffff64	j	L25_LF2
  772  000017a8  54000000	nop; delay slot nop
  773  000017ac          	L26_LF2:
  774  000017ac  8fc1fff4	lw	r1,-12(r30)
  775  000017b0  8fc20008	lw	r2,8(r30)
  776  000017b4  00220828	seq	r1,r1,r2
  777  000017b8  10200018	beqz	r1,L32_LF2
  778  000017bc  54000000	nop; delay slot nop
  779  000017c0  20010000	addi	r1,r0,#0
  780  000017c4  08000054	j	L24_LF2
  781  000017c8  54000000	nop; delay slot nop
  782  000017cc  0800004c	j	L33_LF2
  783  000017d0  54000000	nop; delay slot nop
  784  000017d4          	L32_LF2:
  785  000017d4  8fc20000	lw	r2,(r30)
  786  000017d8  90410000	lbu	r1,(r2)
  787  000017dc  8fc20004	lw	r2,4(r30)
  788  000017e0  90430000	lbu	r3,(r2)
  789  000017e4  00230822	sub	r1,r1,r3
  790  000017e8  74220000	sgei	r2,r1,#0
  791  000017ec  10400020	beqz	r2,L34_LF2
  792  000017f0  54000000	nop; delay slot nop
  793  000017f4  8fc10000	lw	r1,(r30)
  794  000017f8  8fc20004	lw	r2,4(r30)
  795  000017fc  90210000	lbu	r1,(r1)
  796  00001800  90420000	lbu	r2,(r2)
  797  00001804  00220829	sne	r1,r1,r2
  798  00001808  08000008	j	L35_LF2
  799  0000180c  54000000	nop; delay slot nop
  800  00001810          	L34_LF2:
  801  00001810  2001ffff	addi	r1,r0,#-1
  802  00001814          	L35_LF2:
  803  00001814  08000004	j	L24_LF2
  804  00001818  54000000	nop; delay slot nop
  805  0000181c          	L33_LF2:
  806  0000181c          	L24_LF2:
  807  0000181c  8fa20000	lw	r2,0(r29)
  808  00001820  8fa30004	lw	r3,4(r29)
  809  00001824  8fdffff8	lw	r31,-8(r30)
  810  00001828  001ee820	add	r29,r0,r30
  811  0000182c  8fdefffc	lw	r30,-4(r30)
  812  00001830  4be00000	jr	r31
  813  00001834  54000000	nop
  814  00001838          	.endproc _dstrncmp
  815  00001838          	.align 2
  816  00001838          	.proc _dstrlen
  817  00001838          	.global _dstrlen
  818  00001838          	_dstrlen:
  819                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  820  00001838  afbefffc	sw	-4(r29),r30; push fp
  821  0000183c  001df020	add	r30,r0,r29; fp = sp
  822  00001840  afbffff8	sw	-8(r29),r31; push ret addr
  823  00001844  2fbd0018	subui	r29,r29,#24; alloc local storage
  824  00001848  afa20000	sw	0(r29),r2
  825  0000184c  20010000	addi	r1,r0,#0
  826  00001850  afc1fff4	sw	-12(r30),r1
  827  00001854          	L37_LF2:
  828  00001854  8fc10000	lw	r1,(r30)
  829  00001858  20220001	addi	r2,r1,#1
  830  0000185c  afc20000	sw	(r30),r2
  831  00001860  90210000	lbu	r1,(r1)
  832  00001864  64220000	snei	r2,r1,#0
  833  00001868  1440000c	bnez	r2,L39_LF2
  834  0000186c  54000000	nop; delay slot nop
  835  00001870  0800001c	j	L38_LF2
  836  00001874  54000000	nop; delay slot nop
  837  00001878          	L39_LF2:
  838  00001878  8fc2fff4	lw	r2,-12(r30)
  839  0000187c  20410001	addi	r1,r2,#1
  840  00001880  00011020	add	r2,r0,r1
  841  00001884  afc2fff4	sw	-12(r30),r2
  842  00001888  0bffffc8	j	L37_LF2
  843  0000188c  54000000	nop; delay slot nop
  844  00001890          	L38_LF2:
  845  00001890  8fc1fff4	lw	r1,-12(r30)
  846  00001894  08000004	j	L36_LF2
  847  00001898  54000000	nop; delay slot nop
  848  0000189c          	L36_LF2:
  849  0000189c  8fa20000	lw	r2,0(r29)
  850  000018a0  8fdffff8	lw	r31,-8(r30)
  851  000018a4  001ee820	add	r29,r0,r30
  852  000018a8  8fdefffc	lw	r30,-4(r30)
  853  000018ac  4be00000	jr	r31
  854  000018b0  54000000	nop
  855  000018b4          	.endproc _dstrlen
  856  000018b4          	.align 2
  857  000018b4          	.proc _dstrstr
  858  000018b4          	.global _dstrstr
  859  000018b4          	_dstrstr:
  860                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  861  000018b4  afbefffc	sw	-4(r29),r30; push fp
  862  000018b8  001df020	add	r30,r0,r29; fp = sp
  863  000018bc  afbffff8	sw	-8(r29),r31; push ret addr
  864  000018c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  865  000018c4  afa20000	sw	0(r29),r2
  866  000018c8  23bdfff8	addi	r29,r29,#-8
  867  000018cc  001d0820	add	r1,r0,r29
  868  000018d0  8fc20004	lw	r2,4(r30)
  869  000018d4  ac220000	sw	(r1),r2
  870  000018d8  0fffff5c	jal	_dstrlen
  871  000018dc  54000000	nop; delay slot nop
  872  000018e0  23bd0008	addi	r29,r29,#8
  873  000018e4  afc1fff4	sw	-12(r30),r1
  874  000018e8          	L41_LF2:
  875  000018e8  8fc10000	lw	r1,(r30)
  876  000018ec  90220000	lbu	r2,(r1)
  877  000018f0  64410000	snei	r1,r2,#0
  878  000018f4  1420000c	bnez	r1,L43_LF2
  879  000018f8  54000000	nop; delay slot nop
  880  000018fc  08000060	j	L42_LF2
  881  00001900  54000000	nop; delay slot nop
  882  00001904          	L43_LF2:
  883  00001904  23bdfff0	addi	r29,r29,#-16
  884  00001908  001d0820	add	r1,r0,r29
  885  0000190c  8fc20000	lw	r2,(r30)
  886  00001910  ac220000	sw	(r1),r2
  887  00001914  8fc20004	lw	r2,4(r30)
  888  00001918  ac220004	sw	4(r1),r2
  889  0000191c  8fc2fff4	lw	r2,-12(r30)
  890  00001920  ac220008	sw	8(r1),r2
  891  00001924  0ffffdc0	jal	_dstrncmp
  892  00001928  54000000	nop; delay slot nop
  893  0000192c  23bd0010	addi	r29,r29,#16
  894  00001930  64220000	snei	r2,r1,#0
  895  00001934  14400010	bnez	r2,L44_LF2
  896  00001938  54000000	nop; delay slot nop
  897  0000193c  8fc10000	lw	r1,(r30)
  898  00001940  08000028	j	L40_LF2
  899  00001944  54000000	nop; delay slot nop
  900  00001948          	L44_LF2:
  901  00001948  8fc20000	lw	r2,(r30)
  902  0000194c  20410001	addi	r1,r2,#1
  903  00001950  00011020	add	r2,r0,r1
  904  00001954  afc20000	sw	(r30),r2
  905  00001958  0bffff8c	j	L41_LF2
  906  0000195c  54000000	nop; delay slot nop
  907  00001960          	L42_LF2:
  908  00001960  20010000	addi	r1,r0,#0
  909  00001964  08000004	j	L40_LF2
  910  00001968  54000000	nop; delay slot nop
  911  0000196c          	L40_LF2:
  912  0000196c  8fa20000	lw	r2,0(r29)
  913  00001970  8fdffff8	lw	r31,-8(r30)
  914  00001974  001ee820	add	r29,r0,r30
  915  00001978  8fdefffc	lw	r30,-4(r30)
  916  0000197c  4be00000	jr	r31
  917  00001980  54000000	nop
  918  00001984          	.endproc _dstrstr
  919  00001984          	.align 2
  920  00001984          	.proc _dmindex
  921  00001984          	.global _dmindex
  922  00001984          	_dmindex:
  923                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  924  00001984  afbefffc	sw	-4(r29),r30; push fp
  925  00001988  001df020	add	r30,r0,r29; fp = sp
  926  0000198c  afbffff8	sw	-8(r29),r31; push ret addr
  927  00001990  2fbd0018	subui	r29,r29,#24; alloc local storage
  928  00001994  afa20000	sw	0(r29),r2
  929  00001998  54000000	nop
  930  0000199c          	L46_LF2:
  931  0000199c  8fc10000	lw	r1,(r30)
  932  000019a0  90220000	lbu	r2,(r1)
  933  000019a4  64410000	snei	r1,r2,#0
  934  000019a8  1420000c	bnez	r1,L48_LF2
  935  000019ac  54000000	nop; delay slot nop
  936  000019b0  08000070	j	L47_LF2
  937  000019b4  54000000	nop; delay slot nop
  938  000019b8          	L48_LF2:
  939  000019b8  8fc10004	lw	r1,4(r30)
  940  000019bc  afc1fff4	sw	-12(r30),r1
  941  000019c0          	L49_LF2:
  942  000019c0  8fc1fff4	lw	r1,-12(r30)
  943  000019c4  90220000	lbu	r2,(r1)
  944  000019c8  64410000	snei	r1,r2,#0
  945  000019cc  1420000c	bnez	r1,L52_LF2
  946  000019d0  54000000	nop; delay slot nop
  947  000019d4  08000044	j	L50_LF2
  948  000019d8  54000000	nop; delay slot nop
  949  000019dc          	L52_LF2:
  950  000019dc  8fc10000	lw	r1,(r30)
  951  000019e0  8fc2fff4	lw	r2,-12(r30)
  952  000019e4  90210000	lbu	r1,(r1)
  953  000019e8  90420000	lbu	r2,(r2)
  954  000019ec  00220828	seq	r1,r1,r2
  955  000019f0  10200010	beqz	r1,L51_LF2
  956  000019f4  54000000	nop; delay slot nop
  957  000019f8  8fc10000	lw	r1,(r30)
  958  000019fc  08000030	j	L45_LF2
  959  00001a00  54000000	nop; delay slot nop
  960  00001a04          	L53_LF2:
  961  00001a04          	L51_LF2:
  962  00001a04  8fc2fff4	lw	r2,-12(r30)
  963  00001a08  20410001	addi	r1,r2,#1
  964  00001a0c  00011020	add	r2,r0,r1
  965  00001a10  afc2fff4	sw	-12(r30),r2
  966  00001a14  0bffffa8	j	L49_LF2
  967  00001a18  54000000	nop; delay slot nop
  968  00001a1c          	L50_LF2:
  969  00001a1c  0bffff7c	j	L46_LF2
  970  00001a20  54000000	nop; delay slot nop
  971  00001a24          	L47_LF2:
  972  00001a24  20010000	addi	r1,r0,#0
  973  00001a28  08000004	j	L45_LF2
  974  00001a2c  54000000	nop; delay slot nop
  975  00001a30          	L45_LF2:
  976  00001a30  8fa20000	lw	r2,0(r29)
  977  00001a34  8fdffff8	lw	r31,-8(r30)
  978  00001a38  001ee820	add	r29,r0,r30
  979  00001a3c  8fdefffc	lw	r30,-4(r30)
  980  00001a40  4be00000	jr	r31
  981  00001a44  54000000	nop
  982  00001a48          	.endproc _dmindex
  983  00001a48          	.align 2
  984  00001a48          	.proc _dindex
  985  00001a48          	.global _dindex
  986  00001a48          	_dindex:
  987                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  988  00001a48  afbefffc	sw	-4(r29),r30; push fp
  989  00001a4c  001df020	add	r30,r0,r29; fp = sp
  990  00001a50  afbffff8	sw	-8(r29),r31; push ret addr
  991  00001a54  2fbd0010	subui	r29,r29,#16; alloc local storage
  992  00001a58  afa20000	sw	0(r29),r2
  993  00001a5c  54000000	nop
  994  00001a60          	L55_LF2:
  995  00001a60  8fc10000	lw	r1,(r30)
  996  00001a64  90220000	lbu	r2,(r1)
  997  00001a68  64410000	snei	r1,r2,#0
  998  00001a6c  1420000c	bnez	r1,L57_LF2
  999  00001a70  54000000	nop; delay slot nop
 1000  00001a74  08000040	j	L56_LF2
 1001  00001a78  54000000	nop; delay slot nop
 1002  00001a7c          	L57_LF2:
 1003  00001a7c  8fc10000	lw	r1,(r30)
 1004  00001a80  90220000	lbu	r2,(r1)
 1005  00001a84  8fc10004	lw	r1,4(r30)
 1006  00001a88  00411028	seq	r2,r2,r1
 1007  00001a8c  10400010	beqz	r2,L58_LF2
 1008  00001a90  54000000	nop; delay slot nop
 1009  00001a94  8fc10000	lw	r1,(r30)
 1010  00001a98  08000028	j	L54_LF2
 1011  00001a9c  54000000	nop; delay slot nop
 1012  00001aa0          	L58_LF2:
 1013  00001aa0  8fc20000	lw	r2,(r30)
 1014  00001aa4  20410001	addi	r1,r2,#1
 1015  00001aa8  00011020	add	r2,r0,r1
 1016  00001aac  afc20000	sw	(r30),r2
 1017  00001ab0  0bffffac	j	L55_LF2
 1018  00001ab4  54000000	nop; delay slot nop
 1019  00001ab8          	L56_LF2:
 1020  00001ab8  20010000	addi	r1,r0,#0
 1021  00001abc  08000004	j	L54_LF2
 1022  00001ac0  54000000	nop; delay slot nop
 1023  00001ac4          	L54_LF2:
 1024  00001ac4  8fa20000	lw	r2,0(r29)
 1025  00001ac8  8fdffff8	lw	r31,-8(r30)
 1026  00001acc  001ee820	add	r29,r0,r30
 1027  00001ad0  8fdefffc	lw	r30,-4(r30)
 1028  00001ad4  4be00000	jr	r31
 1029  00001ad8  54000000	nop
 1030  00001adc          	.endproc _dindex
 1031  00001adc          	.align 2
 1032  00001adc          	.proc _ditoa
 1033  00001adc          	.global _ditoa
 1034  00001adc          	_ditoa:
 1035                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1036  00001adc  afbefffc	sw	-4(r29),r30; push fp
 1037  00001ae0  001df020	add	r30,r0,r29; fp = sp
 1038  00001ae4  afbffff8	sw	-8(r29),r31; push ret addr
 1039  00001ae8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1040  00001aec  afa20000	sw	0(r29),r2
 1041  00001af0  afa30004	sw	4(r29),r3
 1042  00001af4  8fc10000	lw	r1,(r30)
 1043  00001af8  68220000	slti	r2,r1,#0
 1044  00001afc  1040002c	beqz	r2,L60_LF2
 1045  00001b00  54000000	nop; delay slot nop
 1046  00001b04  8fc10004	lw	r1,4(r30)
 1047  00001b08  20220001	addi	r2,r1,#1
 1048  00001b0c  afc20004	sw	4(r30),r2
 1049  00001b10  2002002d	addi	r2,r0,(#0x2d)&0xff
 1050  00001b14  a0220000	sb	(r1),r2
 1051  00001b18  8fc10000	lw	r1,(r30)
 1052  00001b1c  00011022	sub	r2,r0,r1
 1053  00001b20  afc20000	sw	(r30),r2
 1054  00001b24  08000118	j	L61_LF2
 1055  00001b28  54000000	nop; delay slot nop
 1056  00001b2c          	L60_LF2:
 1057  00001b2c  8fc10000	lw	r1,(r30)
 1058  00001b30  64220000	snei	r2,r1,#0
 1059  00001b34  14400020	bnez	r2,L62_LF2
 1060  00001b38  54000000	nop; delay slot nop
 1061  00001b3c  8fc10004	lw	r1,4(r30)
 1062  00001b40  20220001	addi	r2,r1,#1
 1063  00001b44  afc20004	sw	4(r30),r2
 1064  00001b48  20020030	addi	r2,r0,(#0x30)&0xff
 1065  00001b4c  a0220000	sb	(r1),r2
 1066  00001b50  080000ec	j	L61_LF2
 1067  00001b54  54000000	nop; delay slot nop
 1068  00001b58          	L62_LF2:
 1069  00001b58  20010001	addi	r1,r0,#1
 1070  00001b5c  afc1fff4	sw	-12(r30),r1
 1071  00001b60          	L64_LF2:
 1072  00001b60  8fc1fff4	lw	r1,-12(r30)
 1073  00001b64  8fc20000	lw	r2,(r30)
 1074  00001b68  0022082c	sle	r1,r1,r2
 1075  00001b6c  1420000c	bnez	r1,L66_LF2
 1076  00001b70  54000000	nop; delay slot nop
 1077  00001b74  08000024	j	L65_LF2
 1078  00001b78  54000000	nop; delay slot nop
 1079  00001b7c          	L67_LF2:
 1080  00001b7c          	L66_LF2:
 1081  00001b7c  8fc1fff4	lw	r1,-12(r30)
 1082  00001b80  00011820	add	r3,r0,r1
 1083  00001b84  50620002	slli	r2,r3,#0x2
 1084  00001b88  00411020	add	r2,r2,r1
 1085  00001b8c  50410001	slli	r1,r2,#0x1
 1086  00001b90  afc1fff4	sw	-12(r30),r1
 1087  00001b94  0bffffc8	j	L64_LF2
 1088  00001b98  54000000	nop; delay slot nop
 1089  00001b9c          	L65_LF2:
 1090  00001b9c  54000000	nop
 1091  00001ba0          	L68_LF2:
 1092  00001ba0  8fc1fff4	lw	r1,-12(r30)
 1093  00001ba4  2002000a	addi	r2,r0,#10
 1094  00001ba8  00200035	movi2fp	f0,r1
 1095  00001bac  00400835	movi2fp	f1,r2
 1096  00001bb0  0401000f	div	f0,f0,f1
 1097  00001bb4  00000834	movfp2i	r1,f0
 1098  00001bb8  afc1fff4	sw	-12(r30),r1
 1099  00001bbc  8fc10004	lw	r1,4(r30)
 1100  00001bc0  20220001	addi	r2,r1,#1
 1101  00001bc4  afc20004	sw	4(r30),r2
 1102  00001bc8  8fc20000	lw	r2,(r30)
 1103  00001bcc  8fc3fff4	lw	r3,-12(r30)
 1104  00001bd0  00400035	movi2fp	f0,r2
 1105  00001bd4  00600835	movi2fp	f1,r3
 1106  00001bd8  0401000f	div	f0,f0,f1
 1107  00001bdc  00001034	movfp2i	r2,f0
 1108  00001be0  00021820	add	r3,r0,r2
 1109  00001be4  20620030	addi	r2,r3,#48
 1110  00001be8  a0220000	sb	(r1),r2
 1111  00001bec  8fc10000	lw	r1,(r30)
 1112  00001bf0  8fc3fff4	lw	r3,-12(r30)
 1113  00001bf4  00200035	movi2fp	f0,r1
 1114  00001bf8  00600835	movi2fp	f1,r3
 1115  00001bfc  0401000f	div	f0,f0,f1
 1116  00001c00  00001034	movfp2i	r2,f0
 1117  00001c04  8fc3fff4	lw	r3,-12(r30)
 1118  00001c08  00400035	movi2fp	f0,r2
 1119  00001c0c  00600835	movi2fp	f1,r3
 1120  00001c10  0401000e	mult	f0,f0,f1
 1121  00001c14  00001034	movfp2i	r2,f0
 1122  00001c18  00220822	sub	r1,r1,r2
 1123  00001c1c  afc10000	sw	(r30),r1
 1124  00001c20          	L70_LF2:
 1125  00001c20  8fc1fff4	lw	r1,-12(r30)
 1126  00001c24  6c220001	sgti	r2,r1,#1
 1127  00001c28  1440000c	bnez	r2,L71_LF2
 1128  00001c2c  54000000	nop; delay slot nop
 1129  00001c30  0800000c	j	L61_LF2
 1130  00001c34  54000000	nop; delay slot nop
 1131  00001c38          	L71_LF2:
 1132  00001c38  0bffff64	j	L68_LF2
 1133  00001c3c  54000000	nop; delay slot nop
 1134  00001c40          	L69_LF2:
 1135  00001c40          	L63_LF2:
 1136  00001c40          	L61_LF2:
 1137  00001c40  8fc10004	lw	r1,4(r30)
 1138  00001c44  20020000	addi	r2,r0,(#0x0)&0xff
 1139  00001c48  a0220000	sb	(r1),r2
 1140  00001c4c          	L59_LF2:
 1141  00001c4c  8fa20000	lw	r2,0(r29)
 1142  00001c50  8fa30004	lw	r3,4(r29)
 1143  00001c54  8fdffff8	lw	r31,-8(r30)
 1144  00001c58  001ee820	add	r29,r0,r30
 1145  00001c5c  8fdefffc	lw	r30,-4(r30)
 1146  00001c60  4be00000	jr	r31
 1147  00001c64  54000000	nop
 1148  00001c68          	.endproc _ditoa
 1149  00001c68          	.align 2
 1150  00001c68          	.proc _dstrtol
 1151  00001c68          	.global _dstrtol
 1152  00001c68          	_dstrtol:
 1153                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1154  00001c68  afbefffc	sw	-4(r29),r30; push fp
 1155  00001c6c  001df020	add	r30,r0,r29; fp = sp
 1156  00001c70  afbffff8	sw	-8(r29),r31; push ret addr
 1157  00001c74  2fbd0020	subui	r29,r29,#32; alloc local storage
 1158  00001c78  afa20000	sw	0(r29),r2
 1159  00001c7c  20010000	addi	r1,r0,#0
 1160  00001c80  afc1fff4	sw	-12(r30),r1
 1161  00001c84          	L73_LF2:
 1162  00001c84  8fc10000	lw	r1,(r30)
 1163  00001c88  90220000	lbu	r2,(r1)
 1164  00001c8c  60410020	seqi	r1,r2,#32
 1165  00001c90  14200034	bnez	r1,L75_LF2
 1166  00001c94  54000000	nop; delay slot nop
 1167  00001c98  8fc10000	lw	r1,(r30)
 1168  00001c9c  90220000	lbu	r2,(r1)
 1169  00001ca0  60410009	seqi	r1,r2,#9
 1170  00001ca4  14200020	bnez	r1,L75_LF2
 1171  00001ca8  54000000	nop; delay slot nop
 1172  00001cac  8fc10000	lw	r1,(r30)
 1173  00001cb0  90220000	lbu	r2,(r1)
 1174  00001cb4  6041000a	seqi	r1,r2,#10
 1175  00001cb8  1420000c	bnez	r1,L75_LF2
 1176  00001cbc  54000000	nop; delay slot nop
 1177  00001cc0  0800001c	j	L74_LF2
 1178  00001cc4  54000000	nop; delay slot nop
 1179  00001cc8          	L75_LF2:
 1180  00001cc8  8fc20000	lw	r2,(r30)
 1181  00001ccc  20410001	addi	r1,r2,#1
 1182  00001cd0  00011020	add	r2,r0,r1
 1183  00001cd4  afc20000	sw	(r30),r2
 1184  00001cd8  0bffffa8	j	L73_LF2
 1185  00001cdc  54000000	nop; delay slot nop
 1186  00001ce0          	L74_LF2:
 1187  00001ce0  8fc10004	lw	r1,4(r30)
 1188  00001ce4  64220000	snei	r2,r1,#0
 1189  00001ce8  10400010	beqz	r2,L76_LF2
 1190  00001cec  54000000	nop; delay slot nop
 1191  00001cf0  8fc10004	lw	r1,4(r30)
 1192  00001cf4  8fc20000	lw	r2,(r30)
 1193  00001cf8  ac220000	sw	(r1),r2
 1194  00001cfc          	L76_LF2:
 1195  00001cfc  8fc10000	lw	r1,(r30)
 1196  00001d00  90220000	lbu	r2,(r1)
 1197  00001d04  64410000	snei	r1,r2,#0
 1198  00001d08  14200010	bnez	r1,L77_LF2
 1199  00001d0c  54000000	nop; delay slot nop
 1200  00001d10  8fc1fff4	lw	r1,-12(r30)
 1201  00001d14  08000294	j	L72_LF2
 1202  00001d18  54000000	nop; delay slot nop
 1203  00001d1c          	L77_LF2:
 1204  00001d1c  8fc10000	lw	r1,(r30)
 1205  00001d20  90220000	lbu	r2,(r1)
 1206  00001d24  6041002d	seqi	r1,r2,#45
 1207  00001d28  10200024	beqz	r1,L78_LF2
 1208  00001d2c  54000000	nop; delay slot nop
 1209  00001d30  2001ffff	addi	r1,r0,#-1
 1210  00001d34  afc1ffec	sw	-20(r30),r1
 1211  00001d38  8fc20000	lw	r2,(r30)
 1212  00001d3c  20410001	addi	r1,r2,#1
 1213  00001d40  00011020	add	r2,r0,r1
 1214  00001d44  afc20000	sw	(r30),r2
 1215  00001d48  0800000c	j	L79_LF2
 1216  00001d4c  54000000	nop; delay slot nop
 1217  00001d50          	L78_LF2:
 1218  00001d50  20010001	addi	r1,r0,#1
 1219  00001d54  afc1ffec	sw	-20(r30),r1
 1220  00001d58          	L79_LF2:
 1221  00001d58  8fc10008	lw	r1,8(r30)
 1222  00001d5c  64220000	snei	r2,r1,#0
 1223  00001d60  14400090	bnez	r2,L80_LF2
 1224  00001d64  54000000	nop; delay slot nop
 1225  00001d68  8fc10000	lw	r1,(r30)
 1226  00001d6c  90220000	lbu	r2,(r1)
 1227  00001d70  60410030	seqi	r1,r2,#48
 1228  00001d74  10200074	beqz	r1,L81_LF2
 1229  00001d78  54000000	nop; delay slot nop
 1230  00001d7c  8fc20000	lw	r2,(r30)
 1231  00001d80  20410001	addi	r1,r2,#1
 1232  00001d84  00011020	add	r2,r0,r1
 1233  00001d88  afc20000	sw	(r30),r2
 1234  00001d8c  8fc10000	lw	r1,(r30)
 1235  00001d90  90220000	lbu	r2,(r1)
 1236  00001d94  60410078	seqi	r1,r2,#120
 1237  00001d98  14200020	bnez	r1,L83_LF2
 1238  00001d9c  54000000	nop; delay slot nop
 1239  00001da0  8fc10000	lw	r1,(r30)
 1240  00001da4  90220000	lbu	r2,(r1)
 1241  00001da8  60410058	seqi	r1,r2,#88
 1242  00001dac  1420000c	bnez	r1,L83_LF2
 1243  00001db0  54000000	nop; delay slot nop
 1244  00001db4  08000024	j	L82_LF2
 1245  00001db8  54000000	nop; delay slot nop
 1246  00001dbc          	L83_LF2:
 1247  00001dbc  20010010	addi	r1,r0,#16
 1248  00001dc0  afc10008	sw	8(r30),r1
 1249  00001dc4  8fc20000	lw	r2,(r30)
 1250  00001dc8  20410001	addi	r1,r2,#1
 1251  00001dcc  00011020	add	r2,r0,r1
 1252  00001dd0  afc20000	sw	(r30),r2
 1253  00001dd4  0800000c	j	L84_LF2
 1254  00001dd8  54000000	nop; delay slot nop
 1255  00001ddc          	L82_LF2:
 1256  00001ddc  20010008	addi	r1,r0,#8
 1257  00001de0  afc10008	sw	8(r30),r1
 1258  00001de4          	L84_LF2:
 1259  00001de4  0800000c	j	L80_LF2
 1260  00001de8  54000000	nop; delay slot nop
 1261  00001dec          	L81_LF2:
 1262  00001dec  2001000a	addi	r1,r0,#10
 1263  00001df0  afc10008	sw	8(r30),r1
 1264  00001df4          	L85_LF2:
 1265  00001df4          	L80_LF2:
 1266  00001df4  8fc10008	lw	r1,8(r30)
 1267  00001df8  70220000	slei	r2,r1,#0
 1268  00001dfc  1440001c	bnez	r2,L87_LF2
 1269  00001e00  54000000	nop; delay slot nop
 1270  00001e04  8fc10008	lw	r1,8(r30)
 1271  00001e08  6c220010	sgti	r2,r1,#16
 1272  00001e0c  1440000c	bnez	r2,L87_LF2
 1273  00001e10  54000000	nop; delay slot nop
 1274  00001e14  08000010	j	L86_LF2
 1275  00001e18  54000000	nop; delay slot nop
 1276  00001e1c          	L87_LF2:
 1277  00001e1c  8fc1fff4	lw	r1,-12(r30)
 1278  00001e20  08000188	j	L72_LF2
 1279  00001e24  54000000	nop; delay slot nop
 1280  00001e28          	L86_LF2:
 1281  00001e28  54000000	nop
 1282  00001e2c          	L88_LF2:
 1283  00001e2c  8fc10000	lw	r1,(r30)
 1284  00001e30  90220000	lbu	r2,(r1)
 1285  00001e34  6c41002f	sgtui	r1,r2,#47
 1286  00001e38  10200030	beqz	r1,L91_LF2
 1287  00001e3c  54000000	nop; delay slot nop
 1288  00001e40  8fc10000	lw	r1,(r30)
 1289  00001e44  90220000	lbu	r2,(r1)
 1290  00001e48  70410039	sleui	r1,r2,#57
 1291  00001e4c  1020001c	beqz	r1,L91_LF2
 1292  00001e50  54000000	nop; delay slot nop
 1293  00001e54  8fc10000	lw	r1,(r30)
 1294  00001e58  90220000	lbu	r2,(r1)
 1295  00001e5c  2041ffd0	addi	r1,r2,#-48
 1296  00001e60  afc1fff0	sw	-16(r30),r1
 1297  00001e64  0800008c	j	L92_LF2
 1298  00001e68  54000000	nop; delay slot nop
 1299  00001e6c          	L91_LF2:
 1300  00001e6c  8fc10000	lw	r1,(r30)
 1301  00001e70  90220000	lbu	r2,(r1)
 1302  00001e74  6c410060	sgtui	r1,r2,#96
 1303  00001e78  10200030	beqz	r1,L93_LF2
 1304  00001e7c  54000000	nop; delay slot nop
 1305  00001e80  8fc10000	lw	r1,(r30)
 1306  00001e84  90220000	lbu	r2,(r1)
 1307  00001e88  7041007a	sleui	r1,r2,#122
 1308  00001e8c  1020001c	beqz	r1,L93_LF2
 1309  00001e90  54000000	nop; delay slot nop
 1310  00001e94  8fc10000	lw	r1,(r30)
 1311  00001e98  90220000	lbu	r2,(r1)
 1312  00001e9c  2041ffa9	addi	r1,r2,#-87
 1313  00001ea0  afc1fff0	sw	-16(r30),r1
 1314  00001ea4  0800004c	j	L92_LF2
 1315  00001ea8  54000000	nop; delay slot nop
 1316  00001eac          	L93_LF2:
 1317  00001eac  8fc10000	lw	r1,(r30)
 1318  00001eb0  90220000	lbu	r2,(r1)
 1319  00001eb4  6c410040	sgtui	r1,r2,#64
 1320  00001eb8  10200030	beqz	r1,L95_LF2
 1321  00001ebc  54000000	nop; delay slot nop
 1322  00001ec0  8fc10000	lw	r1,(r30)
 1323  00001ec4  90220000	lbu	r2,(r1)
 1324  00001ec8  7041005a	sleui	r1,r2,#90
 1325  00001ecc  1020001c	beqz	r1,L95_LF2
 1326  00001ed0  54000000	nop; delay slot nop
 1327  00001ed4  8fc10000	lw	r1,(r30)
 1328  00001ed8  90220000	lbu	r2,(r1)
 1329  00001edc  2041ffc9	addi	r1,r2,#-55
 1330  00001ee0  afc1fff0	sw	-16(r30),r1
 1331  00001ee4  0800000c	j	L92_LF2
 1332  00001ee8  54000000	nop; delay slot nop
 1333  00001eec          	L95_LF2:
 1334  00001eec  200103e8	addi	r1,r0,#1000
 1335  00001ef0  afc1fff0	sw	-16(r30),r1
 1336  00001ef4          	L96_LF2:
 1337  00001ef4          	L94_LF2:
 1338  00001ef4          	L92_LF2:
 1339  00001ef4  8fc1fff0	lw	r1,-16(r30)
 1340  00001ef8  8fc20008	lw	r2,8(r30)
 1341  00001efc  0022082a	slt	r1,r1,r2
 1342  00001f00  10200040	beqz	r1,L90_LF2
 1343  00001f04  54000000	nop; delay slot nop
 1344  00001f08  8fc1fff4	lw	r1,-12(r30)
 1345  00001f0c  8fc20008	lw	r2,8(r30)
 1346  00001f10  00200035	movi2fp	f0,r1
 1347  00001f14  00400835	movi2fp	f1,r2
 1348  00001f18  0401000e	mult	f0,f0,f1
 1349  00001f1c  00000834	movfp2i	r1,f0
 1350  00001f20  afc1fff4	sw	-12(r30),r1
 1351  00001f24  8fc1fff4	lw	r1,-12(r30)
 1352  00001f28  8fc2fff0	lw	r2,-16(r30)
 1353  00001f2c  00220820	add	r1,r1,r2
 1354  00001f30  afc1fff4	sw	-12(r30),r1
 1355  00001f34  8fc20000	lw	r2,(r30)
 1356  00001f38  20410001	addi	r1,r2,#1
 1357  00001f3c  00011020	add	r2,r0,r1
 1358  00001f40  afc20000	sw	(r30),r2
 1359  00001f44          	L97_LF2:
 1360  00001f44          	L90_LF2:
 1361  00001f44  8fc1fff0	lw	r1,-16(r30)
 1362  00001f48  8fc20008	lw	r2,8(r30)
 1363  00001f4c  0022082a	slt	r1,r1,r2
 1364  00001f50  1420000c	bnez	r1,L98_LF2
 1365  00001f54  54000000	nop; delay slot nop
 1366  00001f58  0800000c	j	L89_LF2
 1367  00001f5c  54000000	nop; delay slot nop
 1368  00001f60          	L98_LF2:
 1369  00001f60  0bfffec8	j	L88_LF2
 1370  00001f64  54000000	nop; delay slot nop
 1371  00001f68          	L89_LF2:
 1372  00001f68  8fc10004	lw	r1,4(r30)
 1373  00001f6c  64220000	snei	r2,r1,#0
 1374  00001f70  10400010	beqz	r2,L99_LF2
 1375  00001f74  54000000	nop; delay slot nop
 1376  00001f78  8fc10004	lw	r1,4(r30)
 1377  00001f7c  8fc20000	lw	r2,(r30)
 1378  00001f80  ac220000	sw	(r1),r2
 1379  00001f84          	L99_LF2:
 1380  00001f84  8fc1fff4	lw	r1,-12(r30)
 1381  00001f88  8fc2ffec	lw	r2,-20(r30)
 1382  00001f8c  00200035	movi2fp	f0,r1
 1383  00001f90  00400835	movi2fp	f1,r2
 1384  00001f94  0401000e	mult	f0,f0,f1
 1385  00001f98  00000834	movfp2i	r1,f0
 1386  00001f9c  afc1fff4	sw	-12(r30),r1
 1387  00001fa0  8fc1fff4	lw	r1,-12(r30)
 1388  00001fa4  08000004	j	L72_LF2
 1389  00001fa8  54000000	nop; delay slot nop
 1390  00001fac          	L72_LF2:
 1391  00001fac  8fa20000	lw	r2,0(r29)
 1392  00001fb0  8fdffff8	lw	r31,-8(r30)
 1393  00001fb4  001ee820	add	r29,r0,r30
 1394  00001fb8  8fdefffc	lw	r30,-4(r30)
 1395  00001fbc  4be00000	jr	r31
 1396  00001fc0  54000000	nop
 1397  00001fc4          	.endproc _dstrtol
 1398  00001fc4          	.align 2
 1399  00001fc4          	.proc _bcopy
 1400  00001fc4          	.global _bcopy
 1401  00001fc4          	_bcopy:
 1402                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1403  00001fc4  afbefffc	sw	-4(r29),r30; push fp
 1404  00001fc8  001df020	add	r30,r0,r29; fp = sp
 1405  00001fcc  afbffff8	sw	-8(r29),r31; push ret addr
 1406  00001fd0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1407  00001fd4  afa20000	sw	0(r29),r2
 1408  00001fd8  afa30004	sw	4(r29),r3
 1409  00001fdc  54000000	nop
 1410  00001fe0          	L101_LF2:
 1411  00001fe0  8fc10008	lw	r1,8(r30)
 1412  00001fe4  2022ffff	addi	r2,r1,#-1
 1413  00001fe8  afc20008	sw	8(r30),r2
 1414  00001fec  6c210000	sgti	r1,r1,#0
 1415  00001ff0  1420000c	bnez	r1,L103_LF2
 1416  00001ff4  54000000	nop; delay slot nop
 1417  00001ff8  0800002c	j	L102_LF2
 1418  00001ffc  54000000	nop; delay slot nop
 1419  00002000          	L103_LF2:
 1420  00002000  8fc10004	lw	r1,4(r30)
 1421  00002004  20220001	addi	r2,r1,#1
 1422  00002008  afc20004	sw	4(r30),r2
 1423  0000200c  8fc20000	lw	r2,(r30)
 1424  00002010  20430001	addi	r3,r2,#1
 1425  00002014  afc30000	sw	(r30),r3
 1426  00002018  80420000	lb	r2,(r2)
 1427  0000201c  a0220000	sb	(r1),r2
 1428  00002020  0bffffbc	j	L101_LF2
 1429  00002024  54000000	nop; delay slot nop
 1430  00002028          	L102_LF2:
 1431  00002028          	L100_LF2:
 1432  00002028  8fa20000	lw	r2,0(r29)
 1433  0000202c  8fa30004	lw	r3,4(r29)
 1434  00002030  8fdffff8	lw	r31,-8(r30)
 1435  00002034  001ee820	add	r29,r0,r30
 1436  00002038  8fdefffc	lw	r30,-4(r30)
 1437  0000203c  4be00000	jr	r31
 1438  00002040  54000000	nop
 1439  00002044          	.endproc _bcopy
 1440  00002044          	.align 2
 1441  00002044          	.proc _bzero
 1442  00002044          	.global _bzero
 1443  00002044          	_bzero:
 1444                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1445  00002044  afbefffc	sw	-4(r29),r30; push fp
 1446  00002048  001df020	add	r30,r0,r29; fp = sp
 1447  0000204c  afbffff8	sw	-8(r29),r31; push ret addr
 1448  00002050  2fbd0010	subui	r29,r29,#16; alloc local storage
 1449  00002054  afa20000	sw	0(r29),r2
 1450  00002058  54000000	nop
 1451  0000205c          	L105_LF2:
 1452  0000205c  8fc10004	lw	r1,4(r30)
 1453  00002060  2022ffff	addi	r2,r1,#-1
 1454  00002064  afc20004	sw	4(r30),r2
 1455  00002068  6c210000	sgti	r1,r1,#0
 1456  0000206c  1420000c	bnez	r1,L107_LF2
 1457  00002070  54000000	nop; delay slot nop
 1458  00002074  08000020	j	L106_LF2
 1459  00002078  54000000	nop; delay slot nop
 1460  0000207c          	L107_LF2:
 1461  0000207c  8fc10000	lw	r1,(r30)
 1462  00002080  20220001	addi	r2,r1,#1
 1463  00002084  afc20000	sw	(r30),r2
 1464  00002088  20020000	addi	r2,r0,(#0x0)&0xff
 1465  0000208c  a0220000	sb	(r1),r2
 1466  00002090  0bffffc8	j	L105_LF2
 1467  00002094  54000000	nop; delay slot nop
 1468  00002098          	L106_LF2:
 1469  00002098          	L104_LF2:
 1470  00002098  8fa20000	lw	r2,0(r29)
 1471  0000209c  8fdffff8	lw	r31,-8(r30)
 1472  000020a0  001ee820	add	r29,r0,r30
 1473  000020a4  8fdefffc	lw	r30,-4(r30)
 1474  000020a8  4be00000	jr	r31
 1475  000020ac  54000000	nop
 1476  000020b0          	.endproc _bzero
 1477  000020b0          	.align 2
 1478  000020b0          	.proc _min
 1479  000020b0          	.global _min
 1480  000020b0          	_min:
 1481                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1482  000020b0  afbefffc	sw	-4(r29),r30; push fp
 1483  000020b4  001df020	add	r30,r0,r29; fp = sp
 1484  000020b8  afbffff8	sw	-8(r29),r31; push ret addr
 1485  000020bc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1486  000020c0  afa20000	sw	0(r29),r2
 1487  000020c4  afa30004	sw	4(r29),r3
 1488  000020c8  8fc10000	lw	r1,(r30)
 1489  000020cc  8fc20004	lw	r2,4(r30)
 1490  000020d0  0022182c	sle	r3,r1,r2
 1491  000020d4  14600008	bnez	r3,L109_LF2
 1492  000020d8  54000000	nop; delay slot nop
 1493  000020dc  8fc10004	lw	r1,4(r30)
 1494  000020e0          	L109_LF2:
 1495  000020e0  08000004	j	L108_LF2
 1496  000020e4  54000000	nop; delay slot nop
 1497  000020e8          	L108_LF2:
 1498  000020e8  8fa20000	lw	r2,0(r29)
 1499  000020ec  8fa30004	lw	r3,4(r29)
 1500  000020f0  8fdffff8	lw	r31,-8(r30)
 1501  000020f4  001ee820	add	r29,r0,r30
 1502  000020f8  8fdefffc	lw	r30,-4(r30)
 1503  000020fc  4be00000	jr	r31
 1504  00002100  54000000	nop
 1505  00002104          	.endproc _min
 1506  00002104          	.align 2
 1507  00002104          	.proc _max
 1508  00002104          	.global _max
 1509  00002104          	_max:
 1510                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1511  00002104  afbefffc	sw	-4(r29),r30; push fp
 1512  00002108  001df020	add	r30,r0,r29; fp = sp
 1513  0000210c  afbffff8	sw	-8(r29),r31; push ret addr
 1514  00002110  2fbd0010	subui	r29,r29,#16; alloc local storage
 1515  00002114  afa20000	sw	0(r29),r2
 1516  00002118  afa30004	sw	4(r29),r3
 1517  0000211c  8fc10000	lw	r1,(r30)
 1518  00002120  8fc20004	lw	r2,4(r30)
 1519  00002124  0022182d	sge	r3,r1,r2
 1520  00002128  14600008	bnez	r3,L111_LF2
 1521  0000212c  54000000	nop; delay slot nop
 1522  00002130  8fc10004	lw	r1,4(r30)
 1523  00002134          	L111_LF2:
 1524  00002134  08000004	j	L110_LF2
 1525  00002138  54000000	nop; delay slot nop
 1526  0000213c          	L110_LF2:
 1527  0000213c  8fa20000	lw	r2,0(r29)
 1528  00002140  8fa30004	lw	r3,4(r29)
 1529  00002144  8fdffff8	lw	r31,-8(r30)
 1530  00002148  001ee820	add	r29,r0,r30
 1531  0000214c  8fdefffc	lw	r30,-4(r30)
 1532  00002150  4be00000	jr	r31
 1533  00002154  54000000	nop
 1534  00002158          	.endproc _max
 1535                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1536                      ;;;
 1537                      ;;; Most of the traps are called in files from libtraps.
 1540  00002158          	.align 2
 1541  00002158          	.proc _exit
 1542  00002158          	.global _exit
 1543  00002158          	_exit:
 1544  00002158  44000300	trap	#0x300
 1545  0000215c  4be00000	jr	r31
 1546  00002160  54000000	nop
 1547  00002164          	.endproc _exit
 1549                      ; for the benefit of gcc.
 1550  00002164          	.proc ___main
 1551  00002164          	.global ___main
 1552  00002164          	___main:
 1553  00002164  4be00000	jr	r31
 1554  00002168  54000000	nop
 1555  0000216c          	.endproc ___main
 1556  0000216c          	.text
 1557  0000216c          	.global _etext
 1558  0000216c          	_etext:
 1559  0000216c          	.align 3
 1560  00002170          	.data
 1561  000030b2          	.global _edata
 1562  000030b2          	_edata:
